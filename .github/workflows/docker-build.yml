name: Docker Image CI

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract tag name
      id: extract_tag
      run: |
        echo "TAG<<EOF" >> $GITHUB_OUTPUT
        echo "${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Check source branch
      id: check_branch
      run: |
        # Fetch all branches
        git fetch --all
        
        # Check which branches contain this commit
        BRANCHES=$(git branch -r --contains HEAD | grep -E '(origin/main|origin/dev)' | head -1)
        
        if echo "$BRANCHES" | grep -q "origin/main"; then
          echo "source_branch=main" >> $GITHUB_OUTPUT
          echo "push_latest=true" >> $GITHUB_OUTPUT
          echo "Tag is from main branch - will push latest tag"
        elif echo "$BRANCHES" | grep -q "origin/dev"; then
          echo "source_branch=dev" >> $GITHUB_OUTPUT  
          echo "push_latest=false" >> $GITHUB_OUTPUT
          echo "Tag is from dev branch - will not push latest tag"
        else
          echo "source_branch=unknown" >> $GITHUB_OUTPUT
          echo "push_latest=false" >> $GITHUB_OUTPUT
          echo "Tag source branch unknown - will not push latest tag"
        fi

    - name: Build and push backend Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          alterem/gemini-poise:${{ steps.extract_tag.outputs.TAG }}
          ghcr.io/${{ github.repository }}/gemini-poise:${{ steps.extract_tag.outputs.TAG }}
          ${{ steps.check_branch.outputs.push_latest == 'true' && 'alterem/gemini-poise:latest' || '' }}
          ${{ steps.check_branch.outputs.push_latest == 'true' && format('ghcr.io/{0}/gemini-poise:latest', github.repository) || '' }}
        platforms: linux/amd64,linux/arm64

    - name: Build and push frontend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./gemini-poise-frontend
        file: ./gemini-poise-frontend/Dockerfile
        push: true
        tags: |
          alterem/gemini-poise-frontend:${{ steps.extract_tag.outputs.TAG }}
          ghcr.io/${{ github.repository }}/gemini-poise-frontend:${{ steps.extract_tag.outputs.TAG }}
          ${{ steps.check_branch.outputs.push_latest == 'true' && 'alterem/gemini-poise-frontend:latest' || '' }}
          ${{ steps.check_branch.outputs.push_latest == 'true' && format('ghcr.io/{0}/gemini-poise-frontend:latest', github.repository) || '' }}
        platforms: linux/amd64,linux/arm64

    # ... existing code ...